// Generated by Dagger (https://google.github.io/dagger).
package com.thanksmister.things.wallpanel.di;

import android.app.Application;
import com.thanksmister.things.wallpanel.modules.SensorReader;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class ActivityModule_ProvideSensorReaderFactory implements Factory<SensorReader> {
  private final Provider<Application> appProvider;

  public ActivityModule_ProvideSensorReaderFactory(Provider<Application> appProvider) {
    this.appProvider = appProvider;
  }

  @Override
  public SensorReader get() {
    return Preconditions.checkNotNull(
        ActivityModule.provideSensorReader(appProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static ActivityModule_ProvideSensorReaderFactory create(
      Provider<Application> appProvider) {
    return new ActivityModule_ProvideSensorReaderFactory(appProvider);
  }

  public static SensorReader proxyProvideSensorReader(Application app) {
    return Preconditions.checkNotNull(
        ActivityModule.provideSensorReader(app),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
