// Generated by Dagger (https://google.github.io/dagger).
package com.thanksmister.things.wallpanel.di;

import android.app.Application;
import com.thanksmister.things.wallpanel.utils.DialogUtils;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class ActivityModule_ProvidesDialogUtilsFactory implements Factory<DialogUtils> {
  private final Provider<Application> applicationProvider;

  public ActivityModule_ProvidesDialogUtilsFactory(Provider<Application> applicationProvider) {
    this.applicationProvider = applicationProvider;
  }

  @Override
  public DialogUtils get() {
    return Preconditions.checkNotNull(
        ActivityModule.providesDialogUtils(applicationProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static ActivityModule_ProvidesDialogUtilsFactory create(
      Provider<Application> applicationProvider) {
    return new ActivityModule_ProvidesDialogUtilsFactory(applicationProvider);
  }

  public static DialogUtils proxyProvidesDialogUtils(Application application) {
    return Preconditions.checkNotNull(
        ActivityModule.providesDialogUtils(application),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
