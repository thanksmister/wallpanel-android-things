// Generated by Dagger (https://google.github.io/dagger).
package com.thanksmister.things.wallpanel.ui;

import android.app.Application;
import com.thanksmister.things.wallpanel.modules.CameraReader;
import com.thanksmister.things.wallpanel.persistence.Configuration;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class DetectionViewModel_Factory implements Factory<DetectionViewModel> {
  private final Provider<Application> applicationProvider;

  private final Provider<Configuration> configurationProvider;

  private final Provider<CameraReader> cameraReaderProvider;

  public DetectionViewModel_Factory(
      Provider<Application> applicationProvider,
      Provider<Configuration> configurationProvider,
      Provider<CameraReader> cameraReaderProvider) {
    this.applicationProvider = applicationProvider;
    this.configurationProvider = configurationProvider;
    this.cameraReaderProvider = cameraReaderProvider;
  }

  @Override
  public DetectionViewModel get() {
    return new DetectionViewModel(
        applicationProvider.get(), configurationProvider.get(), cameraReaderProvider.get());
  }

  public static DetectionViewModel_Factory create(
      Provider<Application> applicationProvider,
      Provider<Configuration> configurationProvider,
      Provider<CameraReader> cameraReaderProvider) {
    return new DetectionViewModel_Factory(
        applicationProvider, configurationProvider, cameraReaderProvider);
  }
}
