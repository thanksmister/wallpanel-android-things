// Generated by Dagger (https://google.github.io/dagger).
package com.thanksmister.things.wallpanel.di;

import android.app.Application;
import android.content.SharedPreferences;
import com.thanksmister.things.wallpanel.persistence.Configuration;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class ActivityModule_ProvideConfigurationFactory implements Factory<Configuration> {
  private final Provider<Application> appProvider;

  private final Provider<SharedPreferences> sharedPreferencesProvider;

  public ActivityModule_ProvideConfigurationFactory(
      Provider<Application> appProvider, Provider<SharedPreferences> sharedPreferencesProvider) {
    this.appProvider = appProvider;
    this.sharedPreferencesProvider = sharedPreferencesProvider;
  }

  @Override
  public Configuration get() {
    return Preconditions.checkNotNull(
        ActivityModule.provideConfiguration(appProvider.get(), sharedPreferencesProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static ActivityModule_ProvideConfigurationFactory create(
      Provider<Application> appProvider, Provider<SharedPreferences> sharedPreferencesProvider) {
    return new ActivityModule_ProvideConfigurationFactory(appProvider, sharedPreferencesProvider);
  }

  public static Configuration proxyProvideConfiguration(
      Application app, SharedPreferences sharedPreferences) {
    return Preconditions.checkNotNull(
        ActivityModule.provideConfiguration(app, sharedPreferences),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
