// Generated by Dagger (https://google.github.io/dagger).
package com.thanksmister.things.wallpanel.ui.fragments;

import com.thanksmister.things.wallpanel.persistence.Configuration;
import com.thanksmister.things.wallpanel.utils.DialogUtils;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class DeviceSettingsFragment_MembersInjector
    implements MembersInjector<DeviceSettingsFragment> {
  private final Provider<Configuration> configurationProvider;

  private final Provider<DialogUtils> dialogUtilsProvider;

  public DeviceSettingsFragment_MembersInjector(
      Provider<Configuration> configurationProvider, Provider<DialogUtils> dialogUtilsProvider) {
    this.configurationProvider = configurationProvider;
    this.dialogUtilsProvider = dialogUtilsProvider;
  }

  public static MembersInjector<DeviceSettingsFragment> create(
      Provider<Configuration> configurationProvider, Provider<DialogUtils> dialogUtilsProvider) {
    return new DeviceSettingsFragment_MembersInjector(configurationProvider, dialogUtilsProvider);
  }

  @Override
  public void injectMembers(DeviceSettingsFragment instance) {
    injectConfiguration(instance, configurationProvider.get());
    injectDialogUtils(instance, dialogUtilsProvider.get());
  }

  public static void injectConfiguration(
      DeviceSettingsFragment instance, Configuration configuration) {
    instance.configuration = configuration;
  }

  public static void injectDialogUtils(DeviceSettingsFragment instance, DialogUtils dialogUtils) {
    instance.dialogUtils = dialogUtils;
  }
}
